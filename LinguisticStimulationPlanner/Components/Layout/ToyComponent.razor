@page "/toy"
@inject ToyService ToyService
@inject IDialogService DialogService
@using LinguisticStimulationPlanner.Models
@using LinguisticStimulationPlanner.Services
@using MudBlazor

<MudGrid>
    <MudItem xs="12">
        <MudText Typo="Typo.h4">Toy Management</MudText>
    </MudItem>

    <MudItem xs="12">
        <MudSwitch Color="Color.Primary" @bind-Value="_showInInventoryOnly" Label="Only Inventory" Style="float: right;" />

        <MudButtonGroup Style="float: right;" OverrideStyles="false">
            <MudButton Color="Color.Primary" OnClick="AddNewToy" StartIcon="@Icons.Material.Filled.Add">
                Add
            </MudButton>
            <MudButton Color="Color.Primary" OnClick="ToggleEditMode" StartIcon="@(_isEditMode ? Icons.Material.Filled.Save : Icons.Material.Filled.Edit)">
                @((_isEditMode ? "Save" : "Edit"))
            </MudButton>
            @if (_isEditMode)
            {
                <MudButton Color="Color.Primary" OnClick="DiscardChanges" StartIcon="@Icons.Material.Filled.Close">
                    Discard Changes
                </MudButton>
            }
            <MudButton Color="Color.Error" IconColor="Color.Error" OnClick="ShowDeleteConfirmationDialogAsync" Disabled="@(_selectedToys.Count < 1 || !_isEditMode)" StartIcon="@Icons.Material.Filled.Delete">
                Delete
            </MudButton>
        </MudButtonGroup>
    </MudItem>
</MudGrid>

<MudGrid>
    <MudItem xs="12">
        <MudTable Items="@( _showInInventoryOnly ? _toys.Where(t => t.InInventory).ToList() : _toys )" Hover="true" Dense="false" MultiSelection="@_isEditMode" @bind-SelectedItems="_selectedToys">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Assigned Goals</MudTh>
                <MudTh>In Inventory</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Name">
                    @if (_isEditMode)
                    {
                        <MudTextField @bind-Value="context.Name" Immediate="true" Required="true" />
                    }
                    else
                    {
                        @context.Name
                    }
                </MudTd>
                <MudTd DataLabel="Assigned Goals">
                    @foreach (Goal goal in context.GoalToys.Select(gt => gt.Goal))
                    {
                        <MudChip T="string" Color="Color.Primary">@goal.Name</MudChip>
                    }
                    @if (_isEditMode)
                    {
                        <MudFab Color="Color.Tertiary" Size="Size.Small" StartIcon="@Icons.Material.Filled.Add" OnClick="() => ShowGoalSelectDialogAsync(context)"/>
                    }
                </MudTd>
                <MudTd DataLabel="In Inventory">
                    <MudCheckBox @bind-Value="context.InInventory" Immediate="true" Disabled="!_isEditMode" />
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudItem>
</MudGrid>
